trigger: none

schedules:
- cron: "0 3 * * *"
  branches:
      include: master
  displayName: M-F 7:00PM (UTC - 8:00) Pacific daily build
  always: true

stages:
- stage: env_setup
  jobs:
  - job: "download_spk_artifact"
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: |
        # Install the extension
        az extension add --name azure-devops
        # # Login to Azure 
        # echo "az login --service-principal --username $(SP_APP_ID) --password $(SP_PASS) --tenant $(SP_TENANT)"
        # az login --service-principal --username "$(SP_APP_ID)" --password "$(SP_PASS)" --tenant "$(SP_TENANT)"
      workingDirectory: '$(modulePath)'
      displayName: 'Azure CLI Setup'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'ca459769-cfe0-490c-a89e-1f1eb2eba550'
        definition: '20'
        buildVersionToDownload: 'latestFromBranch'
        branchName: 'refs/heads/master'
        itemPattern: "spk*"
        artifactName: 'spk_linux_node_12'
        targetPath: '$(System.DefaultWorkingDirectory)'
    - script: |
        shopt -s expand_aliases
        echo "Current Dir is $(pwd)"
        ls -l
        chmod +x spk-linux
        ls -l
        alias spk="$(pwd)/spk-linux"
        spk --version
      displayName: "Verify SPK downloaded and executable"

  # - job: "run_tests"
  #   dependsOn: download_spk_artifact
  #   condition: succeeded('download_spk_artifact')
  #   steps:
    - script: |
        validate_service () {
            echo "Checking directory `$1`" 
            # local gitignore=".gitignore"
            # local yaml="azure-pipelines.yaml"
            # local dockerfile="Dockerfile"
            local files=( ".gitignore" "azure-pipelines.yaml" "Dockerfile" )
            for i in "${files[@]}"
            do
                : 
                currentFile="$1/$i"
                echo "Current file: $currentFile"
                if [ ! -f $currentFile ]; then
                    echo "The file `$i` does not exist in directory `$1`"
                    exit 1
                fi
            done
        }
        shopt -s expand_aliases
        alias spk="$(pwd)/spk-linux"
        export PLAYGROUND_DIR="$(System.DefaultWorkingDirectory)/playground"
        echo "Running from $(pwd)"

        if [ -d "$PLAYGROUND_DIR"  ]; then rm -Rf $PLAYGROUND_DIR; fi

        if [ ! -d "$PLAYGROUND_DIR" ]; then
          echo "PLAYGROUND_DIR does not exist"
          mkdir $PLAYGROUND_DIR
          echo "PLAYGROUND_DIR created"
        fi
        cd $PLAYGROUND_DIR
        spk --version
        export FrontEnd=Fabrikam.Acme.FrontEnd
        export BackEnd=Fabrikam.Acme.BackEnd
        export services_dir=services

        mkdir test-mono-repo
        cd test-mono-repo

        mkdir $services_dir
        spk project init -m -d $services_dir

        spk service create $FrontEnd -d $services_dir
        validate_service "$PLAYGROUND_DIR/test-mono-repo/$services_dir/$FrontEnd"
        echo "Validated!"
      displayName: "CREATING DIR"

