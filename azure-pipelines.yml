trigger:
- master

pr:
- master

strategy:
  matrix:
    node_8_x:
      node_version: 8.x
    node_10_x:
      node_version: 10.x
    node_12_x:
      node_version: 12.x
  maxParallel: 3

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: "$(node_version)"
  displayName: 'Install Node.js'

- script: |
    yarn
    yarn build
  displayName: 'YARN BUILD'

- script: |
    yarn test
  displayName: 'YARN TEST'

- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'



# stages:
# - stage: Install Node
#   jobs:
#   - job: install_node
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: NodeTool@0
#       inputs:
#         versionSpec: $(node-version)
#       displayName: 'Install Node.js'

# - stage: Build
#   jobs:
#   - job: build
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - script: |
#         yarn
#         yarn build
#         yarn test

# - stage: Test
#   jobs:
#   - job: build
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - script: |
#         yarn test
#     - task: PublishCodeCoverageResults@1
#       inputs: 
#         codeCoverageTool: Cobertura
#         summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
#         reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'


# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: $(node-version)
#   displayName: 'Install Node.js'

# - script: |
#     # npm install
#     # npm run build
#     yarn
#     yarn build
#     yarn test
#   displayName: 'npm install and build'

# - task: PublishCodeCoverageResults@1
#   inputs: 
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
#     reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
