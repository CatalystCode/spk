trigger:
  - master

pr:
  - master

strategy:
  matrix:
    node_10_x:
      node_version: 10.x
    node_12_x:
      node_version: 12.x
  maxParallel: 2

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "$(node_version)"
    displayName: "Install Node.js"

  - script: |
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    displayName: "Install az-cli"

  - script: |
      yarn
    displayName: "YARN INSTALL"

  - script: |
      yarn lint
    displayName: "YARN LINT"

  - script: |
      yarn build
    displayName: "YARN BUILD"

  - script: |
      yarn test
    displayName: "YARN TEST"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/*coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/**/coverage"
    condition: and(eq(variables['Agent.JobStatus'], 'Succeeded'), endsWith(variables['Agent.JobName'], 'node_12_x'))

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml' 
    condition: and(eq(variables['Agent.JobStatus'], 'Succeeded'), endsWith(variables['Agent.JobName'], 'node_12_x'))

  - task: PublishPipelineArtifact@1
    inputs:
      path: $(System.DefaultWorkingDirectory)/dist/spk-linux
      artifact: spk_linux_node_12
    condition: and(eq(variables['Agent.JobStatus'], 'Succeeded'), endsWith(variables['Agent.JobName'], 'node_12_x'))

  - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@6
    displayName: 'Check build quality'
    inputs:
      checkWarnings: false
      warningFailOption: fixed
      warningFilters: ''
      showStatistics: true
      checkCoverage: true
      coverageFailOption: build
      coverageType: branches
      baseDefinitionId: $(SPK_DEFINITION_ID)
      baseBranchRef: refs/heads/master
      runTitle: 'Code Coverage Evaluation'
    condition: and(eq(variables['Agent.JobStatus'], 'Succeeded'), endsWith(variables['Agent.JobName'], 'node_12_x'))
